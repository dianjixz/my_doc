TARGET  	?=  app
VERSION  	?=  1.00
CROSS 		?= 
CC   		?=  $(CROSS)gcc
CXX   		?=  $(CROSS)g++
DEBUG   	?=  -DUSE_DEBUG
# SOURCES   	+=  $(wildcard ./*.c)
CSRCPATH	?= ./src
CXXSRCPATH	?= ./src
CSOURCES   	+= $(foreach dir, $(CSRCPATH), $(wildcard $(dir)/*.c))
CXXSOURCES	+= $(foreach dir, $(CXXSRCPATH), $(wildcard $(dir)/*.cpp))
INCLUDES   	+=  -I./include
# INCLUDES   	+= -I./
LIB_NAMES  	+=
LIB_PATH  	+=  -L./lib
OBJ   		+=  $(patsubst %.c, %.cc.o, $(CSOURCES))
OBJ   		+=  $(patsubst %.cpp, %.cxx.o, $(CXXSOURCES))
CFLAGS  	+=  -Wall
CXXFLAGS  	+=  -Wall
LDFLAGS	    +=  

#links
$(TARGET):$(OBJ)
	@mkdir -p output
	$(CXX) $(OBJ) $(LIB_PATH) $(LIB_NAMES) -o output/$(TARGET)$(VERSION) $(LDFLAGS)
 
#compile
%.cc.o: %.c
	$(CC) $(INCLUDES) $(DEBUG) -c $(CFLAGS) $< -o $@
%.cxx.o: %.cpp
	$(CXX) $(INCLUDES) $(DEBUG) -c $(CXXFLAGS) $< -o $@

run:
	@ echo run output/$(TARGET)$(VERSION)
	@ ./output/$(TARGET)$(VERSION)

.PHONY:clean
clean:
	@echo "Remove linked and compiled files......"
	rm -rf $(OBJ) $(TARGET) output 